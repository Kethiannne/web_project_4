(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n=e.baseURL,r=e.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseURL=n,this._headers=r}var n,r;return n=t,(r=[{key:"_successfulReturn",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch(this._baseURL+"/cards",{headers:this._headers}).then((function(t){return e._successfulReturn(t)}))}},{key:"addCard",value:function(e){var t=this,n=e.link,r=e.name;return fetch(this._baseURL+"/cards",{headers:this._headers,method:"POST",body:JSON.stringify({link:n,name:r})}).then((function(e){return t._successfulReturn(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch(this._baseURL+"/cards/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return t._successfulReturn(e)}))}},{key:"updateLikeTrue",value:function(e){var t=this;return fetch(this._baseURL+"/cards/likes/"+e,{headers:this._headers,method:"PUT"}).then((function(e){return t._successfulReturn(e)}))}},{key:"updateLikeFalse",value:function(e){var t=this;return fetch(this._baseURL+"/cards/likes/"+e,{headers:this._headers,method:"DELETE"}).then((function(e){return t._successfulReturn(e)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch(this._baseURL+"/users/me",{headers:this._headers}).then((function(t){return e._successfulReturn(t)}))}},{key:"updateUserInfo",value:function(e){var t=this;return fetch(this._baseURL+"/users/me",{headers:this._headers,method:"PATCH",body:JSON.stringify(e)}).then((function(e){return t._successfulReturn(e)}))}},{key:"updateAvatar",value:function(e){var t=this;return fetch(this._baseURL+"/users/me/avatar",{headers:this._headers,method:"PATCH",body:JSON.stringify(e)}).then((function(e){return t._successfulReturn(e)}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._closeEscape=this._closeEscape.bind(this)}var t,r;return t=e,(r=[{key:"openPopup",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closeEscape)}},{key:"closePopup",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closeEscape)}},{key:"_closeEscape",value:function(e){"Escape"===e.key&&this.closePopup()}},{key:"setEventListeners",value:function(){var e=this;this._closeButton=this._popup.querySelector(".popup__close-button"),this._closeButton.addEventListener("click",(function(){e.closePopup()})),this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.closePopup()}))}}])&&n(t.prototype,r),e}();function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return(u="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=l(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function a(e,t){return(a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function s(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?c(e):t}function c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t)}(p,e);var t,n,r,o,f=(r=p,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=l(r);if(o){var n=l(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return s(this,e)});function p(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),(n=f.call(this,e))._form=n._popup.querySelector(".form"),n._submit=t,n._closeEnter=n._closeEnter.bind(c(n)),n}return t=p,(n=[{key:"openPopup",value:function(e,t){u(l(p.prototype),"openPopup",this).call(this),this._id=e,this._card=t,document.addEventListener("keydown",this._closeEnter)}},{key:"closePopup",value:function(){document.removeEventListener("keydown",this._closeEnter),u(l(p.prototype),"closePopup",this).call(this)}},{key:"_handleSubmit",value:function(e){e.preventDefault(),this._submit(this._id,this._card),document.removeEventListener("keydown",this._closeEnter)}},{key:"_closeEnter",value:function(e){"Enter"===e.key&&this._handleSubmit(e)}},{key:"setEventListeners",value:function(){var e=this;u(l(p.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){e._handleSubmit(t)}))}}])&&i(t.prototype,n),p}(r);function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"renderElements",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"prepItem",value:function(e){this._container.prepend(e)}}])&&p(t.prototype,n),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n,r,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._text=t.name,this._imageLink=t.link,this._template=n,this._id=t._id,this._owner=t.owner._id,this._likes=t.likes,this._handleCardClick=r,this._handleDeleteClick=o,this._handleLikeClick=i}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._template).content.querySelector(".elements__element").cloneNode(!0)}},{key:"_handleCardLike",value:function(e){this._isLiked=!this._isLiked,this._handleLikeClick(this._id,this._isLiked,this)}},{key:"_isAlreadyLiked",value:function(e){var t=this;this._likes.forEach((function(n){n._id===e&&(t._placeCard.querySelector(".elements__heart").classList.add("elements__heart_active"),t._isLiked=!t._isLiked)}))}},{key:"updateLikes",value:function(e){this._likesCount.textContent=e.likes.length,this._placeCard.querySelector(".elements__heart").classList.toggle("elements__heart_active")}},{key:"_setEventListeners",value:function(){var e=this;this._placeCard.querySelector(".elements__image").addEventListener("click",(function(t){t.target===t.currentTarget&&e._handleCardClick(e._text,e._imageLink)})),this._placeCard.querySelector(".elements__heart").addEventListener("click",(function(t){e._handleCardLike(t)}))}},{key:"_isOwner",value:function(e){var t=this;this._owner!==e?this._placeCard.querySelector(".elements__delete").remove():this._placeCard.querySelector(".elements__delete").addEventListener("click",(function(){t._handleDeleteClick(t._id,t._placeCard)}))}},{key:"makeCard",value:function(e){return this._placeCard=this._getTemplate(),this._likesCount=this._placeCard.querySelector(".elements__like-count"),this._placeCard.querySelector(".elements__title").textContent=this._text,this._placeCard.querySelector(".elements__image").style.backgroundImage="url(".concat(this._imageLink,")"),this._likesCount.textContent=this._likes.length,this._setEventListeners(),this._isOwner(e),this._isAlreadyLiked(e),this._placeCard}}])&&_(t.prototype,n),e}();function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return(m="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function k(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(r);if(o){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupImage=t._popup.querySelector(".image-popup"),t._popupCaption=t._popup.querySelector(".image-caption"),t}return t=u,(n=[{key:"openPopup",value:function(e,t){this._popupImage.src=t,this._popupImage.alt=e,this._popupCaption.textContent=e,m(g(u.prototype),"openPopup",this).call(this)}}])&&v(t.prototype,n),u}(r);function S(e){return(S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(e,t,n){return(C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function O(e,t){return!t||"object"!==S(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return O(this,e)});function u(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._form=r._popup.querySelector(".form"),r._formSubmit=t,r._formOpen=n,r}return t=u,(n=[{key:"renderLoading",value:function(e){this._saveButton=this._form.querySelector(".form__save-button"),this._saveButton.textContent,this._saveButton.textContent=e?this._saveButton.textContent.slice(0,-1)+"ing...":this._saveButton.textContent.slice(0,-6)+"e"}},{key:"_getInputValues",value:function(){var e={};return Array.from(this._form.querySelectorAll(".form__field")).forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;C(P(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._formSubmit(e._getInputValues())}))}},{key:"closePopup",value:function(){C(P(u.prototype),"closePopup",this).call(this),this._form.reset()}},{key:"openPopup",value:function(){C(P(u.prototype),"openPopup",this).call(this),this._formOpen()}}])&&L(t.prototype,n),u}(r);function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formElement=n,this._saveButton=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.name,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.name,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(e){return e.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(e){this._hasInvalidInput(e)?this.disableButton():this.enableButton()}},{key:"disableButton",value:function(){this._saveButton.setAttribute("disabled",!0),this._saveButton.classList.add(this._inactiveButtonClass)}},{key:"enableButton",value:function(){this._saveButton.removeAttribute("disabled",!0),this._saveButton.classList.remove(this._inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this,t=Array.from(this._formElement.querySelectorAll(this._inputSelector));this._toggleButtonState(t),t.forEach((function(n){n.addEventListener("input",(function(){e._checkInputValidity(n),e._toggleButtonState(t)}))})),this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}},{key:"enableValidation",value:function(){this._setEventListeners(this._formElement)}}])&&I(t.prototype,n),e}(),q={inputSelector:".form__field",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disabled",inputErrorClass:"form__field_error",errorClass:"form__field-error_active"},B=document.querySelector(".page"),T=B.querySelector(".profile"),x=B.querySelector(".popup_edit-form"),A=B.querySelector(".popup_add-form"),U=B.querySelector(".popup_avatar-form"),D=B.querySelector(".popup_delete"),N=T.querySelector(".profile__edit-button"),V=T.querySelector(".profile__name"),H=T.querySelector(".profile__occupation"),J=document.forms.edit,F=J.elements.name,M=J.elements.about,z=x.querySelector(".form__save-button"),Y=T.querySelector(".profile__add-button"),$=(A.querySelector(".form__save-button"),document.forms.add),G=T.querySelector(".profile__image-edit"),K=T.querySelector(".profile__avatar"),Q=document.forms.avatar,W=U.querySelector(".form__save-button"),X=document.querySelector(".card-container"),Z=document.querySelector(".popup_image");function ee(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.forms.delete,D.querySelector(".form__save-button");var te=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileImage=r,this._myName=t,this._myOccupation=n}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._myName.textContent,about:this._myOccupation.textContent}}},{key:"setUserInfo",value:function(e){this._myName.textContent=e.name,this._myOccupation.textContent=e.about,this._id=e._id,this.setAvatar(e)}},{key:"setAvatar",value:function(e){this._profileImage.setAttribute("src",e.avatar)}},{key:"getID",value:function(){return this._id}}])&&ee(t.prototype,n),e}();function ne(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var re=new t({baseURL:"https://around.nomoreparties.co/v1/group-7",headers:{authorization:"a5454f22-eab5-4384-8e26-57b127f56551","Content-Type":"application/json"}});Promise.all([re.getUserInfo(),re.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ne(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ne(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];oe.setUserInfo(o);var u=new R(x,(function(e){u.renderLoading(!0),re.updateUserInfo(e).then((function(e){oe.setUserInfo(e),u.closePopup(),u.renderLoading(!1)})).catch((function(e){console.log("Your profile is out of wack: ".concat(e))}))}),(function(){var e=oe.getUserInfo(),t=e.name,n=e.about;F.value=t,M.value=n,se.disableButton(z)}));u.setEventListeners(),N.addEventListener("click",(function(){u.openPopup()}));var a=new h({items:i,renderer:function(e){a.addItem(l(e))}},X);a.renderElements();var s=new R(A,(function(e){s.renderLoading(!0),re.addCard(e).then((function(e){a.prepItem(l(e)),s.closePopup(),s.renderLoading(!1)})).catch((function(e){console.log("Card could not be delivered as dialed: ".concat(e))}))}),(function(){ae.disableButton()}));function c(e,t){ie.openPopup(e,t)}function l(e){return new d(e,".owner-template",c,le,f).makeCard(oe.getID())}function f(e,t,n){t?re.updateLikeTrue(e).then((function(e){n.updateLikes(e)})).catch((function(e){console.log("Err, you sure you like that?: ".concat(e))})):re.updateLikeFalse(e).then((function(e){n.updateLikes(e)})).catch((function(e){console.log("C'mon, everyone loves that!: ".concat(e))}))}s.setEventListeners(),Y.addEventListener("click",(function(){s.openPopup()}));var p=new R(U,(function(e){p.renderLoading(!0),re.updateAvatar(e).then((function(e){oe.setAvatar({avatar:e.avatar}),p.closePopup(),p.renderLoading(!1)})).catch((function(e){console.log("Aang, your chi is out of focus: ".concat(e))}))}),(function(){ce.disableButton(W)}));p.setEventListeners(),G.addEventListener("click",(function(){p.openPopup()}))})).catch((function(e){console.log("Houston, we have a problem... this one in fact: ".concat(e))}));var oe=new te(V,H,K),ie=new E(Z);function ue(e){var t=new j(q,e);return t.enableValidation(),t}ie.setEventListeners();var ae=ue($),se=ue(J),ce=ue(Q);function le(e,t){fe.openPopup(e,t)}var fe=new f(D,(function(e,t){re.deleteCard(e).then(t.remove(),fe.closePopup()).catch((function(e){console.log("I'm sorry Dave, I'm afraid I can't do that: ".concat(e))}))}));fe.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,